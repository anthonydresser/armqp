-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity combineStreams is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    A_TVALID : IN STD_LOGIC;
    A_TREADY : OUT STD_LOGIC;
    A_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    A_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    A_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    B_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    B_TVALID : IN STD_LOGIC;
    B_TREADY : OUT STD_LOGIC;
    B_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    B_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    B_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    C_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    C_TVALID : OUT STD_LOGIC;
    C_TREADY : IN STD_LOGIC;
    C_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    C_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    C_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of combineStreams is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "combineStreams,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-2,HLS_INPUT_CLOCK=6.734007,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.426000,HLS_SYN_LAT=1082,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=163,HLS_SYN_LUT=176}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp1_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_77E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011101111110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal row : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_1_reg_156 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_167 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_load_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_53 : BOOLEAN;
    signal tmp_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_298 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_65 : BOOLEAN;
    signal ap_sig_bdd_71 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_ioackin_C_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal i_3_fu_194_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_data_V_tmp_reg_307 : STD_LOGIC_VECTOR (15 downto 0);
    signal B_keep_V_tmp_reg_312 : STD_LOGIC_VECTOR (1 downto 0);
    signal B_strb_V_tmp_reg_317 : STD_LOGIC_VECTOR (1 downto 0);
    signal B_last_V_tmp_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal B_id_V_tmp_reg_327 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_dest_V_tmp_reg_332 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_337 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_109 : BOOLEAN;
    signal ap_sig_bdd_114 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal i_2_fu_230_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal A_data_V_tmp_reg_346 : STD_LOGIC_VECTOR (15 downto 0);
    signal A_keep_V_tmp_reg_351 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_strb_V_tmp_reg_356 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_user_V_tmp_reg_361 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_last_V_tmp_reg_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal A_id_V_tmp_reg_371 : STD_LOGIC_VECTOR (4 downto 0);
    signal A_dest_V_tmp_reg_376 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge_fu_274_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_166 : BOOLEAN;
    signal ap_reg_ioackin_C_TREADY : STD_LOGIC := '0';
    signal tmp_5_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_C_TREADY assign process. --
    ap_reg_ioackin_C_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
                    ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = C_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_logic_1 = C_TREADY)))) then 
                    ap_reg_ioackin_C_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond_fu_188_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (tmp_fu_182_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_fu_188_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (tmp_fu_182_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond_fu_188_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond1_fu_224_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((tmp_fu_182_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_224_p2) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((tmp_fu_182_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond1_fu_224_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_1_reg_156 assign process. --
    i_1_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and (tmp_fu_182_p2 = ap_const_lv1_0))) then 
                i_1_reg_156 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_fu_188_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                i_1_reg_156 <= i_3_fu_194_p2;
            end if; 
        end if;
    end process;

    -- i_reg_167 assign process. --
    i_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((tmp_fu_182_p2 = ap_const_lv1_0)))) then 
                i_reg_167 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_224_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                i_reg_167 <= i_2_fu_230_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_224_p2) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                A_data_V_tmp_reg_346 <= A_TDATA;
                A_dest_V_tmp_reg_376 <= A_TDEST;
                A_id_V_tmp_reg_371 <= A_TID;
                A_keep_V_tmp_reg_351 <= A_TKEEP;
                A_last_V_tmp_reg_366 <= A_TLAST;
                A_strb_V_tmp_reg_356 <= A_TSTRB;
                A_user_V_tmp_reg_361 <= A_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_fu_188_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                B_data_V_tmp_reg_307 <= B_TDATA;
                B_dest_V_tmp_reg_332 <= B_TDEST;
                B_id_V_tmp_reg_327 <= B_TID;
                B_keep_V_tmp_reg_312 <= B_TKEEP;
                B_last_V_tmp_reg_322 <= B_TLAST;
                B_strb_V_tmp_reg_317 <= B_TSTRB;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                exitcond1_reg_337 <= exitcond1_fu_224_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                exitcond_reg_298 <= exitcond_fu_188_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3)) then
                row <= storemerge_fu_274_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then
                row_load_reg_288 <= row;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, tmp_fu_182_p2, exitcond_fu_188_p2, exitcond_reg_298, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_C_TREADY, ap_reg_ppiten_pp0_it1, exitcond1_fu_224_p2, exitcond1_reg_337, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((tmp_fu_182_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond_fu_188_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond_fu_188_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp1_stg0_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond1_fu_224_p2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond1_fu_224_p2)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                end if;
            when ap_ST_st6_fsm_3 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- A_TREADY assign process. --
    A_TREADY_assign_proc : process(ap_sig_ioackin_C_TREADY, exitcond1_fu_224_p2, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_224_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
            A_TREADY <= ap_const_logic_1;
        else 
            A_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- B_TREADY assign process. --
    B_TREADY_assign_proc : process(exitcond_fu_188_p2, exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_C_TREADY, ap_reg_ppiten_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_fu_188_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            B_TREADY <= ap_const_logic_1;
        else 
            B_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- C_TDATA assign process. --
    C_TDATA_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_data_V_tmp_reg_307, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_data_V_tmp_reg_346)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TDATA <= A_data_V_tmp_reg_346;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TDATA <= B_data_V_tmp_reg_307;
        else 
            C_TDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C_TDEST assign process. --
    C_TDEST_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_dest_V_tmp_reg_332, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_dest_V_tmp_reg_376)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TDEST <= A_dest_V_tmp_reg_376;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TDEST <= B_dest_V_tmp_reg_332;
        else 
            C_TDEST <= "XXXXXX";
        end if; 
    end process;


    -- C_TID assign process. --
    C_TID_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_id_V_tmp_reg_327, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_id_V_tmp_reg_371)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TID <= A_id_V_tmp_reg_371;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TID <= B_id_V_tmp_reg_327;
        else 
            C_TID <= "XXXXX";
        end if; 
    end process;


    -- C_TKEEP assign process. --
    C_TKEEP_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_keep_V_tmp_reg_312, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_keep_V_tmp_reg_351)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TKEEP <= A_keep_V_tmp_reg_351;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TKEEP <= B_keep_V_tmp_reg_312;
        else 
            C_TKEEP <= "XX";
        end if; 
    end process;


    -- C_TLAST assign process. --
    C_TLAST_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_last_V_tmp_reg_322, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_last_V_tmp_reg_366)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TLAST <= A_last_V_tmp_reg_366;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TLAST <= B_last_V_tmp_reg_322;
        else 
            C_TLAST <= "X";
        end if; 
    end process;


    -- C_TSTRB assign process. --
    C_TSTRB_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, B_strb_V_tmp_reg_317, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_strb_V_tmp_reg_356)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TSTRB <= A_strb_V_tmp_reg_356;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TSTRB <= B_strb_V_tmp_reg_317;
        else 
            C_TSTRB <= "XX";
        end if; 
    end process;


    -- C_TUSER assign process. --
    C_TUSER_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, A_user_V_tmp_reg_361)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TUSER <= A_user_V_tmp_reg_361;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TUSER <= ap_const_lv2_0;
        else 
            C_TUSER <= "XX";
        end if; 
    end process;


    -- C_TVALID assign process. --
    C_TVALID_assign_proc : process(exitcond_reg_298, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_71, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond1_reg_337, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ioackin_C_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_71 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_C_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_reg_337) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_logic_0 = ap_reg_ioackin_C_TREADY)))) then 
            C_TVALID <= ap_const_logic_1;
        else 
            C_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_109 assign process. --
    ap_sig_bdd_109_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_109 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_114 assign process. --
    ap_sig_bdd_114_assign_proc : process(A_TVALID, exitcond1_fu_224_p2)
    begin
                ap_sig_bdd_114 <= ((A_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond1_fu_224_p2));
    end process;


    -- ap_sig_bdd_166 assign process. --
    ap_sig_bdd_166_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_166 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_53 assign process. --
    ap_sig_bdd_53_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_53 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_65 assign process. --
    ap_sig_bdd_65_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_65 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_71 assign process. --
    ap_sig_bdd_71_assign_proc : process(B_TVALID, exitcond_fu_188_p2)
    begin
                ap_sig_bdd_71 <= ((B_TVALID = ap_const_logic_0) and (exitcond_fu_188_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_65)
    begin
        if (ap_sig_bdd_65) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_2_assign_proc : process(ap_sig_bdd_109)
    begin
        if (ap_sig_bdd_109) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_53)
    begin
        if (ap_sig_bdd_53) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_3 assign process. --
    ap_sig_cseq_ST_st6_fsm_3_assign_proc : process(ap_sig_bdd_166)
    begin
        if (ap_sig_bdd_166) then 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_C_TREADY assign process. --
    ap_sig_ioackin_C_TREADY_assign_proc : process(C_TREADY, ap_reg_ioackin_C_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_C_TREADY)) then 
            ap_sig_ioackin_C_TREADY <= C_TREADY;
        else 
            ap_sig_ioackin_C_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1_fu_224_p2 <= "1" when (i_reg_167 = ap_const_lv11_438) else "0";
    exitcond_fu_188_p2 <= "1" when (i_1_reg_156 = ap_const_lv11_438) else "0";
    i_2_fu_230_p2 <= std_logic_vector(unsigned(i_reg_167) + unsigned(ap_const_lv11_1));
    i_3_fu_194_p2 <= std_logic_vector(unsigned(i_1_reg_156) + unsigned(ap_const_lv11_1));
    storemerge_fu_274_p3 <= 
        ap_const_lv32_0 when (tmp_5_fu_264_p2(0) = '1') else 
        tmp_6_fu_269_p2;
    tmp_5_fu_264_p2 <= "1" when (signed(row_load_reg_288) > signed(ap_const_lv32_77E)) else "0";
    tmp_6_fu_269_p2 <= std_logic_vector(unsigned(row_load_reg_288) + unsigned(ap_const_lv32_1));
    tmp_fu_182_p2 <= "1" when (signed(row) < signed(ap_const_lv32_3C0)) else "0";
end behav;
