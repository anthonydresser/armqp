-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity combineStreams is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    A_TVALID : IN STD_LOGIC;
    A_TREADY : OUT STD_LOGIC;
    A_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    A_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    A_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    B_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    B_TVALID : IN STD_LOGIC;
    B_TREADY : OUT STD_LOGIC;
    B_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    B_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    B_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    B_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    C_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    C_TVALID : OUT STD_LOGIC;
    C_TREADY : IN STD_LOGIC;
    C_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    C_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    C_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of combineStreams is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "combineStreams,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-2,HLS_INPUT_CLOCK=6.734007,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.001000,HLS_SYN_LAT=1923,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=98,HLS_SYN_LUT=86}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp1_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3C0 : STD_LOGIC_VECTOR (9 downto 0) := "1111000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal i_reg_150 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_161 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond1_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_52 : BOOLEAN;
    signal ap_sig_bdd_59 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_ioackin_C_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal i_2_fu_178_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal A_data_V_tmp_reg_257 : STD_LOGIC_VECTOR (15 downto 0);
    signal A_keep_V_tmp_reg_262 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_strb_V_tmp_reg_267 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_user_V_tmp_reg_272 : STD_LOGIC_VECTOR (1 downto 0);
    signal A_id_V_tmp_reg_277 : STD_LOGIC_VECTOR (4 downto 0);
    signal A_dest_V_tmp_reg_282 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_287 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_97 : BOOLEAN;
    signal ap_sig_bdd_102 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal i_3_fu_214_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal B_data_V_tmp_reg_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal B_keep_V_tmp_reg_301 : STD_LOGIC_VECTOR (1 downto 0);
    signal B_strb_V_tmp_reg_306 : STD_LOGIC_VECTOR (1 downto 0);
    signal B_user_V_tmp_reg_311 : STD_LOGIC_VECTOR (1 downto 0);
    signal B_last_V_tmp_reg_316 : STD_LOGIC_VECTOR (0 downto 0);
    signal B_id_V_tmp_reg_321 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_dest_V_tmp_reg_326 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_138 : BOOLEAN;
    signal ap_reg_ioackin_C_TREADY : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_C_TREADY assign process. --
    ap_reg_ioackin_C_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
                    ap_reg_ioackin_C_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = C_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_logic_1 = C_TREADY)))) then 
                    ap_reg_ioackin_C_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_172_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond_fu_208_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_fu_208_p2) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond_fu_208_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_1_reg_161 assign process. --
    i_1_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0)))) then 
                i_1_reg_161 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_fu_208_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                i_1_reg_161 <= i_3_fu_214_p2;
            end if; 
        end if;
    end process;

    -- i_reg_150 assign process. --
    i_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                i_reg_150 <= i_2_fu_178_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                i_reg_150 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_172_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                A_data_V_tmp_reg_257 <= A_TDATA;
                A_dest_V_tmp_reg_282 <= A_TDEST;
                A_id_V_tmp_reg_277 <= A_TID;
                A_keep_V_tmp_reg_262 <= A_TKEEP;
                A_strb_V_tmp_reg_267 <= A_TSTRB;
                A_user_V_tmp_reg_272 <= A_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_fu_208_p2) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                B_data_V_tmp_reg_296 <= B_TDATA;
                B_dest_V_tmp_reg_326 <= B_TDEST;
                B_id_V_tmp_reg_321 <= B_TID;
                B_keep_V_tmp_reg_301 <= B_TKEEP;
                B_last_V_tmp_reg_316 <= B_TLAST;
                B_strb_V_tmp_reg_306 <= B_TSTRB;
                B_user_V_tmp_reg_311 <= B_TUSER;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                exitcond1_reg_248 <= exitcond1_fu_172_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                exitcond_reg_287 <= exitcond_fu_208_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (exitcond1_fu_172_p2, exitcond1_reg_248, ap_CS_fsm, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_C_TREADY, ap_reg_ppiten_pp0_it1, exitcond_fu_208_p2, exitcond_reg_287, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((exitcond1_fu_172_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp1_stg0_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond_fu_208_p2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((ap_const_lv1_0 = exitcond_fu_208_p2)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_2;
                end if;
            when ap_ST_st6_fsm_3 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- A_TREADY assign process. --
    A_TREADY_assign_proc : process(exitcond1_fu_172_p2, exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_C_TREADY, ap_reg_ppiten_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            A_TREADY <= ap_const_logic_1;
        else 
            A_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- B_TREADY assign process. --
    B_TREADY_assign_proc : process(ap_sig_ioackin_C_TREADY, exitcond_fu_208_p2, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_fu_208_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or ((ap_const_logic_0 = ap_sig_ioackin_C_TREADY) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
            B_TREADY <= ap_const_logic_1;
        else 
            B_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- C_TDATA assign process. --
    C_TDATA_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_data_V_tmp_reg_257, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_data_V_tmp_reg_296)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TDATA <= B_data_V_tmp_reg_296;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TDATA <= A_data_V_tmp_reg_257;
        else 
            C_TDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C_TDEST assign process. --
    C_TDEST_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_dest_V_tmp_reg_282, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_dest_V_tmp_reg_326)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TDEST <= B_dest_V_tmp_reg_326;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TDEST <= A_dest_V_tmp_reg_282;
        else 
            C_TDEST <= "XXXXXX";
        end if; 
    end process;


    -- C_TID assign process. --
    C_TID_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_id_V_tmp_reg_277, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_id_V_tmp_reg_321)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TID <= B_id_V_tmp_reg_321;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TID <= A_id_V_tmp_reg_277;
        else 
            C_TID <= "XXXXX";
        end if; 
    end process;


    -- C_TKEEP assign process. --
    C_TKEEP_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_keep_V_tmp_reg_262, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_keep_V_tmp_reg_301)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TKEEP <= B_keep_V_tmp_reg_301;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TKEEP <= A_keep_V_tmp_reg_262;
        else 
            C_TKEEP <= "XX";
        end if; 
    end process;


    -- C_TLAST assign process. --
    C_TLAST_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_last_V_tmp_reg_316)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TLAST <= B_last_V_tmp_reg_316;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TLAST <= ap_const_lv1_0;
        else 
            C_TLAST <= "X";
        end if; 
    end process;


    -- C_TSTRB assign process. --
    C_TSTRB_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_strb_V_tmp_reg_267, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_strb_V_tmp_reg_306)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TSTRB <= B_strb_V_tmp_reg_306;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TSTRB <= A_strb_V_tmp_reg_267;
        else 
            C_TSTRB <= "XX";
        end if; 
    end process;


    -- C_TUSER assign process. --
    C_TUSER_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, A_user_V_tmp_reg_272, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, B_user_V_tmp_reg_311)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))))) then 
            C_TUSER <= B_user_V_tmp_reg_311;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            C_TUSER <= A_user_V_tmp_reg_272;
        else 
            C_TUSER <= "XX";
        end if; 
    end process;


    -- C_TVALID assign process. --
    C_TVALID_assign_proc : process(exitcond1_reg_248, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_59, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, exitcond_reg_287, ap_sig_cseq_ST_pp1_stg0_fsm_2, ap_sig_bdd_102, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it1, ap_reg_ioackin_C_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_reg_248 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_59 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_C_TREADY)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_2) and (ap_const_lv1_0 = exitcond_reg_287) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((ap_sig_bdd_102 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) and (ap_const_logic_0 = ap_reg_ioackin_C_TREADY)))) then 
            C_TVALID <= ap_const_logic_1;
        else 
            C_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(B_TVALID, exitcond_fu_208_p2)
    begin
                ap_sig_bdd_102 <= ((B_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = exitcond_fu_208_p2));
    end process;


    -- ap_sig_bdd_138 assign process. --
    ap_sig_bdd_138_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_138 <= (ap_const_lv1_1 = ap_CS_fsm(0 downto 0));
    end process;


    -- ap_sig_bdd_52 assign process. --
    ap_sig_bdd_52_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_52 <= (ap_CS_fsm(1 downto 1) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_59 assign process. --
    ap_sig_bdd_59_assign_proc : process(A_TVALID, exitcond1_fu_172_p2)
    begin
                ap_sig_bdd_59 <= ((A_TVALID = ap_const_logic_0) and (exitcond1_fu_172_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_97 assign process. --
    ap_sig_bdd_97_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_97 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_52)
    begin
        if (ap_sig_bdd_52) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_2_assign_proc : process(ap_sig_bdd_97)
    begin
        if (ap_sig_bdd_97) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_138)
    begin
        if (ap_sig_bdd_138) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_C_TREADY assign process. --
    ap_sig_ioackin_C_TREADY_assign_proc : process(C_TREADY, ap_reg_ioackin_C_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_C_TREADY)) then 
            ap_sig_ioackin_C_TREADY <= C_TREADY;
        else 
            ap_sig_ioackin_C_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1_fu_172_p2 <= "1" when (i_reg_150 = ap_const_lv10_3C0) else "0";
    exitcond_fu_208_p2 <= "1" when (i_1_reg_161 = ap_const_lv10_3C0) else "0";
    i_2_fu_178_p2 <= std_logic_vector(unsigned(i_reg_150) + unsigned(ap_const_lv10_1));
    i_3_fu_214_p2 <= std_logic_vector(unsigned(i_1_reg_161) + unsigned(ap_const_lv10_1));
end behav;
