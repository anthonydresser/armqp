#
# Vivado (TM) v2015.2 (64-bit)
#
# build.tcl: Tcl script for re-creating project 'armqp'
#
# Generated by Vivado on Mon Oct 12 00:33:31 -0400 2015
# IP Build 1264090 on Wed Jun 24 14:22:01 MDT 2015
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (build.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    
#
#*****************************************************************************************

# Set the reference directory to where the script is
set origin_dir [file dirname [info script]]

# Create project
create_project armqp $origin_dir/armqp

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects armqp]
set_property "board_part" "em.avnet.com:zed:part0:1.3" $obj
set_property "default_lib" "xil_defaultlib" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/avnet_zed_hdmi_core"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineVertical_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_oculus1stream_simpleUpscale_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_rotatedUpscale_rotatedUpscale_0_2"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineStreams_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_half_simpleUpscale_1_0"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/src/hdl/ov7670_registers.vhd"]"\
 "[file normalize "$origin_dir/src/hdl/i2c_sender.vhd"]"\
 "[file normalize "$origin_dir/src/hdl/ov7670_controller.vhd"]"\
 "[file normalize "$origin_dir/src/hdl/debounce.vhd"]"\
 "[file normalize "$origin_dir/src/hdl/YUV_capture.vhd"]"\
 "[file normalize "$origin_dir/src/hdl/top_level.v"]"\
 "[file normalize "$origin_dir/src/hdl/edgeDetect.v"]"\
 "[file normalize "$origin_dir/ip_repo/zed_hdmi_out_0/zed_hdmi_out_0.xci"]"\
 "[file normalize "$origin_dir/src/hdl/OV7670_interface.v"]"\
 "[file normalize "$origin_dir/ip_repo/clk_wiz_0/clk_wiz_0.upgrade_log"]"\
 "[file normalize "$origin_dir/ip_repo/clk_wiz_1/clk_wiz_1.upgrade_log"]"\
]
add_files -norecurse -fileset $obj $files

# "[file normalize "$origin_dir/src/bd/hdmi_out.tcl"]"\

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/src/hdl/ov7670_registers.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/src/hdl/i2c_sender.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj


set file "$origin_dir/src/hdl/ov7670_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/src/hdl/debounce.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/src/hdl/YUV_capture.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/ip_repo/zed_hdmi_out_0/zed_hdmi_out_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property "synth_checkpoint_mode" "Singular" $file_obj
}

set file "$origin_dir/ip_repo/clk_wiz_0/clk_wiz_0.upgrade_log"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "$origin_dir/ip_repo/clk_wiz_1/clk_wiz_1.upgrade_log"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "top_level" $obj

# Set IP repository paths
#set obj [get_filesets fifo_generator_0]
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/avnet_zed_hdmi_core"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineVertical_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_oculus1stream_simpleUpscale_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_rotatedUpscale_rotatedUpscale_0_2"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineStreams_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_half_simpleUpscale_1_0"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip_repo/fifo_generator_0/fifo_generator_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/ip_repo/fifo_generator_0/fifo_generator_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property "synth_checkpoint_mode" "Singular" $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set IP repository paths
#set obj [get_filesets clk_wiz_0]
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/avnet_zed_hdmi_core"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineVertical_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_oculus1stream_simpleUpscale_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_rotatedUpscale_rotatedUpscale_0_2"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineStreams_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_half_simpleUpscale_1_0"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip_repo/clk_wiz_0/clk_wiz_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/ip_repo/clk_wiz_0/clk_wiz_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property "synth_checkpoint_mode" "Singular" $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set IP repository paths
#set obj [get_filesets v_vid_in_axi4s_0]
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/avnet_zed_hdmi_core"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineVertical_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_oculus1stream_simpleUpscale_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_rotatedUpscale_rotatedUpscale_0_2"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_combineStreams_combineStreams_1_0"]" $obj
set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/armqp_upscale_half_simpleUpscale_1_0"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip_repo/v_vid_in_axi4s_0/v_vid_in_axi4s_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/ip_repo/v_vid_in_axi4s_0/v_vid_in_axi4s_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property "synth_checkpoint_mode" "Singular" $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/src/hdl/main.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/src/hdl/main.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "$origin_dir/src/hdl/main.xdc" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2015} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2015" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2015} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2015" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "steps.write_bitstream.args.readback_file" "0" $obj
set_property "steps.write_bitstream.args.verbose" "0" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:armqp"


# Create block design
 source $origin_dir/src/bd/hdmi_dma.tcl

 # Generate the wrapper
 set design_name [get_bd_designs]
 make_wrapper -files [get_files $design_name.bd] -top -import